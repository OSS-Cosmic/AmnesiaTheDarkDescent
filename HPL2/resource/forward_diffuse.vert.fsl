#include "forward_resource.h.fsl"

STRUCT(VSInput)
{
	DATA(float3, Position, POSITION);
	DATA(float2, TexCoord, TEXCOORD0);
	DATA(float3, Normal, NORMAL);
	DATA(float3, Tangent, TANGENT);
    
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float3, pos, POSITION);
	DATA(float2, uv, TEXCOORD0);
	DATA(float3, normal, NORMAL);
	DATA(float3, tangent, TANGENT);
	DATA(float3, bitangent, BITANGENT);
    
    DATA(FLAT(uint), drawId, TEXCOORD1);
};

VSOutput VS_MAIN(VSInput In, SV_InstanceID(uint) InstanceID)
{
    INIT_MAIN;
    VSOutput Out;
    
    float4x4 modelView = mul(Get(viewMat), Get(sceneObjects)[InstanceID].modelMat);
    float4x4 modelViewPrj = mul(projMat, modelView);
            
    Out.pos = mul(modelView, float4(In.Position.xyz, 1.0)).xyz;
    Out.uv = mul(Get(sceneObjects)[InstanceID].uvMat, float4(In.TexCoord, 0, 1.0)).xy;

    float3x3 normalMat = ToNormalMat(Get(sceneObjects)[InstanceID].invModelMat, Get(invViewMat));
    Out.normal = normalize(mul(normalMat, In.Normal.xyz));
    Out.tangent = normalize(mul(normalMat, In.Tangent.xyz));
    Out.bitangent = normalize(mul(normalMat, cross(In.Tangent.xyz, In.Normal.xyz)));
    Out.drawId = InstanceID;

    float3 viewEye =  mul(modelView, float4(In.Position.xyz, 1.0)).xyz;
    Out.Position = mul(modelViewPrj, float4(In.Position.xyz, 1.0));
    RETURN(Out);
}

