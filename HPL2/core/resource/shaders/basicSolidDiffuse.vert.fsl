#include "deferred_resources.h.fsl"
#include "deferred_common.h.fsl"

CBUFFER(uniformBlock, UPDATE_FREQ_PER_DRAW, b2, binding = 2)
{
	DATA(float4x4, UVMtx, None);
};

STRUCT(VSInput)
{
	DATA(float4, Position, POSITION);
	DATA(float2, TexCoord, TEXCOORD0);
	DATA(float4, Tangent, TANGENT);
	DATA(float4, Normal, NORMAL);
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float3, ModelViewPosition, POSITION);
	DATA(float2, TexCoord, TEXCOORD0);
    DATA(float3, View, TEXCOORD1);
	DATA(float3, BiTangent, BITANGENT);
	DATA(float3, Tangent, TANGENT);
	DATA(float3, Normal, NORMAL);
};

VSOutput VS_MAIN( VSInput In )
{
    INIT_MAIN;
    VSOutput Out;

	float4x4 viewProjectMatrix = mul(Get(viewMatrix), Get(modelMatrix));
	float4x4 modelView = mul(Get(viewMatrix), Get(modelMatrix));
	float4 wpos = mul(Get(modelMatrix), float4(In.Position.xyz, 1.0));
	
    Out.ModelViewPosition = mul(Get(viewMatrix), float4(wpos.xyz, 1.0)).xyz;

    Out.Normal = normalize(mul(Get(normalMatrix), In.Normal.xyz));
    Out.Tangent = normalize(mul(Get(normalMatrix), In.Tangent.xyz));
    Out.BiTangent = normalize(mul(Get(normalMatrix), cross(In.Tangent.xyz, In.Normal.xyz)));
    Out.TexCoord = mul(Get(UVMtx), float4(In.TexCoord, 0, 1.0)).xy;

    float3 viewEye =  mul(modelView, float4(In.Position.xyz, 1.0)).xyz;
    Out.View = vec3(
        dot(viewEye, Out.Tangent), 
        dot(viewEye, Out.BiTangent), 
        dot(-viewEye, Out.Normal));

    Out.Position = mul(viewProjectMatrix, float4(wpos.xyz, 1.0));
    RETURN(Out);
}
